
#!/usr/bin/env python

# coding=utf-8
# pylint: disable=broad-except,unused-argument,line-too-long
# Copyright (c) 2016-2018, F5 Networks, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
import os
import logging

from cloudinit import bigiq_onboard_utils

# constants
MODULE_NAME = 'set_passwords'

LOG_FILE = '/var/log/f5-cloudinit.log'

LOG = logging.getLogger(MODULE_NAME)
LOG.setLevel(logging.DEBUG)
FORMATTER = logging.Formatter(
    '%(asctime)s - %(name)s - %(levelname)s - %(message)s')
LOGFILE = logging.FileHandler(LOG_FILE)
LOGFILE.setLevel(logging.DEBUG)
LOGFILE.setFormatter(FORMATTER)
LOG.addHandler(LOGFILE)

def handle(name, userdata, cloud, log, args):
    """Cloud-init processing function"""
    # implement set_password module for password setting
    if 'chpasswd' in userdata and 'list' in userdata['chpasswd']:
        for user in userdata['chpasswd']['list'].splitlines():
            parts = user.split(':')
            if len(parts) > 1:
                bigiq_onboard_utils.set_password_tmsh(parts[0].strip(), parts[1].strip())
                # bigiq_onboard_utils.set_password(parts[0].strip(), parts[1].strip())
            else:
                if parts[0]:
                    bigiq_onboard_utils.disable_user(parts[0])


if __name__ == "__main__":
    # Running the cloud-init module from the CLI python interpreter
    bigiq_onboard_utils.onboard_configdrive()
    USERDATA_FILE = '/opt/cloud/instance/user-data.txt'
    USERDATA_CONFIG = {
        MODULE_NAME: {
            'enabled': True
        }
    }
    if os.path.exists(USERDATA_FILE):
        USERDATA_CONFIG = bigiq_onboard_utils.read_conf(USERDATA_FILE)
    handle(MODULE_NAME, USERDATA_CONFIG, None, logging, [])