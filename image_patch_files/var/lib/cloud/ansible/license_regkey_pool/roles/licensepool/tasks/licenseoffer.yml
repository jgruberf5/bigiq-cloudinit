---
- name: Verify license_pool_id is provided
  fail:
    msg: "You must defined a license_pool_id"
  when: license_pool_id is not defined

- name: Get RegKeys in pool
  uri:
    url: "http://localhost:8100/mgmt/cm/device/licensing/pool/regkey/licenses/{{ license_pool_id }}/offerings/{{ item }}"
    timeout: 300
    force_basic_auth: yes
    url_username: admin
    url_password: ""
    body_format: json
    status_code:
      - 200
      - 404
  register: create_offering
  when: item is not none

- name: Add license to pool
  uri:
    url: "http://localhost:8100/mgmt/cm/device/licensing/pool/regkey/licenses/{{ license_pool_id }}/offerings"
    method: POST
    timeout: 300
    force_basic_auth: yes
    url_username: admin
    url_password: ""
    body:
      regKey: "{{ item }}"
      status: ACTIVATING_AUTOMATIC
    body_format: json
  when:
    - item is not none
    - create_offering.status == 404

- name: Request license status
  uri:
    url: "http://localhost:8100/mgmt/cm/device/licensing/pool/regkey/licenses/{{ license_pool_id }}/offerings/{{ item }}"
    timeout: 300
    force_basic_auth: yes
    url_username: admin
    url_password: ""
  register: status
  until: status.json.status in ['READY', 'ACTIVATING_AUTOMATIC_LICENSING_FAILED', 'ACTIVATING_AUTOMATIC_NEED_EULA_ACCEPT']
  retries: 10
  when: item is not none

- name: Stop if licensing failed
  fail:
    msg: Failed to license the device
  when:
    - item is not none
    - status.json.status == 'ACTIVATING_AUTOMATIC_LICENSING_FAILED'

- name: Send EULA if requested
  uri:
    url: "http://localhost:8100/mgmt/cm/device/licensing/pool/regkey/licenses/{{ license_pool_id }}/offerings/{{ item }}"
    method: PATCH
    timeout: 300
    force_basic_auth: yes
    url_username: admin
    url_password: ""
    body:
      status: "ACTIVATING_AUTOMATIC_EULA_ACCEPTED"
      eulaText: "{{ status.json.eulaText }}"
    body_format: json
  when:
    - item is not none
    - status.json.status == 'ACTIVATING_AUTOMATIC_NEED_EULA_ACCEPT'

- name: Request license status, with EULA
  uri:
    url: "http://localhost:8100/mgmt/cm/device/licensing/pool/regkey/licenses/{{ license_pool_id }}/offerings/{{ item }}"
    timeout: 300
    force_basic_auth: yes
    url_username: admin
    url_password: ""
  register: status
  until: status.json.status in ['READY', 'ACTIVATING_AUTOMATIC_EULA_ACCEPTED', 'ACTIVATING_AUTOMATIC_LICENSING_FAILED']
  retries: 5
  when: item is not none

- name: Stop if EULA sending failed
  fail:
    msg: Failed to license the device
  when:
    - item is not none
    - status.json.status is not in ['READY', 'ACTIVATING_AUTOMATIC_EULA_ACCEPTED']
